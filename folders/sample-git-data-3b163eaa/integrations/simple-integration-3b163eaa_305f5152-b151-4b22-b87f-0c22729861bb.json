{
  "revision" : 11,
  "compression" : false,
  "dataAnalyzer" : true,
  "replicas" : 1,
  "openApiUuid" : null,
  "currentProfileUuid" : "54a1bd03-bf22-4cf9-8f5f-b10b40f166e9",
  "parameterGroupUuids" : [ ],
  "repoResourceUuids" : [ "59adfeeb-295b-4c2b-bb39-1d1ebaefdd10" ],
  "routeDefinitions" : [ {
    "id" : 1,
    "camelRouteId" : "simple-integration",
    "enabled" : true,
    "routeId" : 1,
    "route" : [ {
      "name" : "timer",
      "nodeId" : "once per second-id",
      "description" : "once per second",
      "properties" : {
        "_type" : "timer",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "daemon" : true,
        "delay" : "1000",
        "fixedRate" : false,
        "name" : "timer",
        "period" : "1000",
        "repeatCount" : "0",
        "setScheduleTime" : false,
        "time" : "2021-12-31 00:00:00",
        "timerName" : "timer",
        "url" : ""
      },
      "_type" : "timer",
      "kameletPropertiesUrl" : "?timerName=timer&period=1000&repeatCount=0&delay=1000&fixedRate=false&daemon=true&setScheduleTime=false&time=2021-12-31 00:00:00"
    }, {
      "name" : "setBody",
      "nodeId" : "add exchangeId to body-id",
      "description" : "add exchangeId to body",
      "properties" : {
        "_type" : "setBody",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "expression" : "test body from simple: ${exchangeId}",
        "language" : "Simple",
        "name" : "setBody",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setBody",
      "kameletPropertiesUrl" : "?language=Simple&expression=test body from simple: ${exchangeId}&addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "messagingEndpoint",
      "nodeId" : "to route-2-id",
      "description" : "to route-2",
      "properties" : {
        "_type" : "messagingEndpoint",
        "active" : true,
        "camelGroup" : "core",
        "name" : "messagingEndpoint",
        "toDynamicEndpoint" : false,
        "uri" : "direct://route-2",
        "url" : ""
      },
      "_type" : "messagingEndpoint",
      "kameletPropertiesUrl" : "?uri=direct://route-2"
    } ]
  }, {
    "id" : 2,
    "camelRouteId" : "route-2",
    "enabled" : true,
    "routeId" : 2,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "from route-2-id",
      "description" : "from route-2",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "route-2",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=route-2"
    }, {
      "name" : "setHeaders",
      "nodeId" : "set id=${camelId}-id",
      "description" : "set id=${camelId}",
      "properties" : {
        "_type" : "setHeaders",
        "active" : true,
        "addNamespaces" : false,
        "camelGroup" : "core",
        "headerList" : [ {
          "headerName" : "id",
          "headerValue" : "${camelId}",
          "language" : "Simple"
        } ],
        "name" : "setHeaders",
        "namespaces" : [ ],
        "suppressExceptions" : false,
        "url" : ""
      },
      "_type" : "setHeaders",
      "kameletPropertiesUrl" : "?addNamespaces=false&suppressExceptions=false"
    }, {
      "name" : "dslProcessor",
      "nodeId" : "to route-3-id",
      "description" : "to route-3",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : ".to('direct://route-3')",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=.to('direct://route-3')"
    } ]
  }, {
    "id" : 3,
    "camelRouteId" : "route-3",
    "enabled" : true,
    "routeId" : 3,
    "route" : [ {
      "name" : "dslProcessor",
      "nodeId" : "from route-3-id",
      "description" : "from route-3",
      "properties" : {
        "_type" : "dslProcessor",
        "active" : true,
        "camelGroup" : "core",
        "dsl" : "from('direct://route-3')",
        "name" : "dslProcessor",
        "url" : ""
      },
      "_type" : "dslProcessor",
      "kameletPropertiesUrl" : "?dsl=from('direct://route-3')"
    }, {
      "name" : "process",
      "nodeId" : "add date to headers-id",
      "description" : "add date to headers",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "exchange.getIn().setHeader(\"date\", new Date())",
        "import" : "",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?code=exchange.getIn().setHeader(\"date\", new Date())"
    }, {
      "name" : "log",
      "nodeId" : "EIP log-id",
      "description" : "EIP log",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "headers: ${headers}; body: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?loggerName=log&level=INFO&logType=EIP&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false&message=headers: ${headers}; body: ${body}"
    }, {
      "name" : "direct",
      "nodeId" : "direct-00-id",
      "description" : "",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getDirectory1",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getDirectory1"
    } ]
  }, {
    "id" : 4,
    "camelRouteId" : "route-4",
    "enabled" : true,
    "routeId" : 4,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "direct-01-id",
      "description" : "",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getDirectory1",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getDirectory1"
    }, {
      "name" : "process",
      "nodeId" : "process-00-id",
      "description" : "",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "String directoryPath = \"/etc/camel\";\n        \n// Create a File object for the directory\nFile directory = new File(directoryPath);\n\nif (directory.exists() && directory.isDirectory()) {\n\t// List all files in the directory\n\tFile[] files = directory.listFiles();\n\n\tif (files != null) {\n\t\tList<String> fileList = new ArrayList<>();\n\n\t\tfor (File file : files) {\n\t\t\tfileList.add(file.getName());\n\t\t}\n\n\t\t// Set the list of file names as the message body\n\t\texchange.getIn().setBody(fileList);\n\t} else {\n\t\t// No files found in the directory\n\t\texchange.getIn().setBody(\"No files found in the directory.\");\n\t}\n} else {\n\t// Directory doesn't exist\n\texchange.getIn().setBody(\"Directory does not exist.\");\n}",
        "import" : "import org.apache.camel.Exchange;\nimport org.apache.camel.Processor;\nimport org.apache.camel.component.file.GenericFile;\nimport org.apache.camel.component.file.GenericFileMessage;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?import=import org.apache.camel.Exchange;\nimport org.apache.camel.Processor;\nimport org.apache.camel.component.file.GenericFile;\nimport org.apache.camel.component.file.GenericFileMessage;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;&code=String directoryPath = \"/etc/camel\";\n        \n// Create a File object for the directory\nFile directory = new File(directoryPath);\n\nif (directory.exists() && directory.isDirectory()) {\n\t// List all files in the directory\n\tFile[] files = directory.listFiles();\n\n\tif (files != null) {\n\t\tList<String> fileList = new ArrayList<>();\n\n\t\tfor (File file : files) {\n\t\t\tfileList.add(file.getName());\n\t\t}\n\n\t\t// Set the list of file names as the message body\n\t\texchange.getIn().setBody(fileList);\n\t} else {\n\t\t// No files found in the directory\n\t\texchange.getIn().setBody(\"No files found in the directory.\");\n\t}\n} else {\n\t// Directory doesn't exist\n\texchange.getIn().setBody(\"Directory does not exist.\");\n}"
    }, {
      "name" : "log",
      "nodeId" : "log-00-id",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "Directories: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?loggerName=log&level=INFO&logType=EIP&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false&message=Directories: ${body}"
    }, {
      "name" : "direct",
      "nodeId" : "direct-02-id",
      "description" : "",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getDirectory2",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getDirectory2"
    } ]
  }, {
    "id" : 5,
    "camelRouteId" : "route-5",
    "enabled" : true,
    "routeId" : 5,
    "route" : [ {
      "name" : "direct",
      "nodeId" : "direct-03-id",
      "description" : "",
      "properties" : {
        "_type" : "direct",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "core",
        "endpointName" : "getDirectory2",
        "name" : "direct",
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "direct",
      "kameletPropertiesUrl" : "?endpointName=getDirectory2"
    }, {
      "name" : "process",
      "nodeId" : "process-01-id",
      "description" : "",
      "properties" : {
        "_type" : "process",
        "active" : true,
        "camelGroup" : "transform",
        "code" : "String directoryPath = \"/etc/camel/resources\";\n        \n// Create a File object for the directory\nFile directory = new File(directoryPath);\n\nif (directory.exists() && directory.isDirectory()) {\n\t// List all files in the directory\n\tFile[] files = directory.listFiles();\n\n\tif (files != null) {\n\t\tList<String> fileList = new ArrayList<>();\n\n\t\tfor (File file : files) {\n\t\t\tfileList.add(file.getName());\n\t\t}\n\n\t\t// Set the list of file names as the message body\n\t\texchange.getIn().setBody(fileList);\n\t} else {\n\t\t// No files found in the directory\n\t\texchange.getIn().setBody(\"No files found in the directory.\");\n\t}\n} else {\n\t// Directory doesn't exist\n\texchange.getIn().setBody(\"Directory does not exist.\");\n}",
        "import" : "import org.apache.camel.Exchange;\nimport org.apache.camel.Processor;\nimport org.apache.camel.component.file.GenericFile;\nimport org.apache.camel.component.file.GenericFileMessage;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;",
        "name" : "process",
        "url" : ""
      },
      "_type" : "process",
      "kameletPropertiesUrl" : "?import=import org.apache.camel.Exchange;\nimport org.apache.camel.Processor;\nimport org.apache.camel.component.file.GenericFile;\nimport org.apache.camel.component.file.GenericFileMessage;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;&code=String directoryPath = \"/etc/camel/resources\";\n        \n// Create a File object for the directory\nFile directory = new File(directoryPath);\n\nif (directory.exists() && directory.isDirectory()) {\n\t// List all files in the directory\n\tFile[] files = directory.listFiles();\n\n\tif (files != null) {\n\t\tList<String> fileList = new ArrayList<>();\n\n\t\tfor (File file : files) {\n\t\t\tfileList.add(file.getName());\n\t\t}\n\n\t\t// Set the list of file names as the message body\n\t\texchange.getIn().setBody(fileList);\n\t} else {\n\t\t// No files found in the directory\n\t\texchange.getIn().setBody(\"No files found in the directory.\");\n\t}\n} else {\n\t// Directory doesn't exist\n\texchange.getIn().setBody(\"Directory does not exist.\");\n}"
    }, {
      "name" : "log",
      "nodeId" : "log-01-id",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "Directories: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?loggerName=log&level=INFO&logType=EIP&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false&message=Directories: ${body}"
    } ]
  }, {
    "id" : 6,
    "camelRouteId" : "route-6",
    "enabled" : true,
    "routeId" : 6,
    "route" : [ {
      "name" : "file",
      "nodeId" : "file-00-id",
      "description" : "",
      "properties" : {
        "_type" : "file",
        "active" : true,
        "advancedParameters" : [ ],
        "autoCreate" : true,
        "bufferSize" : "131072",
        "camelGroup" : "component",
        "charset" : "utf-8",
        "delete" : false,
        "directoryName" : "/tmp",
        "fileName" : "temp.txt",
        "flatten" : false,
        "name" : "file",
        "noop" : false,
        "recursive" : false,
        "setCharset" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "file",
      "kameletPropertiesUrl" : "?directoryName=/tmp&autoCreate=true&bufferSize=131072&setCharset=false&charset=utf-8&delete=false&fileName=temp.txt&flatten=false&noop=false&recursive=false"
    }, {
      "name" : "log",
      "nodeId" : "log-02-id",
      "description" : "",
      "properties" : {
        "_type" : "log",
        "active" : true,
        "advancedParameters" : [ ],
        "camelGroup" : "component",
        "level" : "INFO",
        "logType" : "EIP",
        "loggerName" : "log",
        "message" : "headers: ${headers}; body: ${body}",
        "multiline" : false,
        "name" : "log",
        "showAll" : false,
        "showBody" : true,
        "showBodyType" : true,
        "showCaughtException" : false,
        "showExchangeId" : false,
        "showHeaders" : false,
        "showProperties" : false,
        "showStackTrace" : false,
        "toDynamicEndpoint" : false,
        "url" : ""
      },
      "_type" : "log",
      "kameletPropertiesUrl" : "?loggerName=log&level=INFO&logType=EIP&multiline=false&showAll=false&showBody=true&showBodyType=true&showCaughtException=false&showExchangeId=false&showHeaders=false&showProperties=false&showStackTrace=false&message=headers: ${headers}; body: ${body}"
    } ]
  } ],
  "traits" : [ ],
  "id" : "305f5152-b151-4b22-b87f-0c22729861bb",
  "name" : "simple-integration-3b163eaa",
  "description" : "Simple integration with the timer-body-log example",
  "createdAt" : "2023-10-26T21:59:09.386607023",
  "updatedAt" : "2023-10-26T22:03:35.788370409",
  "createdBy" : "123e4567-e89b-12d3-a456-426655440011",
  "updatedBy" : "123e4567-e89b-12d3-a456-426655440011"
}